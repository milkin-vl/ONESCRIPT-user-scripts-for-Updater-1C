#use "updater1c"

// ****************************************************************************
// Переменные модуля
// ****************************************************************************

Перем errors;		// Признак того, что при выполнении скрипта были ошибки.
Перем updater;		// Обновлятор, через который мы получаем информацию о базе,
					// а также вызываем различные функции обновлятора.
Перем connector;	// Коннектор для подключения к базе.
Перем v8;			// Само подключение к базе через коннектор.

// ****************************************************************************
// Ваш код для выполнения обновлятором
// ****************************************************************************

Процедура Главная()

	//=========== НАЧАЛО КОДА ДОБАВЛЕНИЯ ПОЛЬЗОВАТЕЛЕЙ ==========

	
	Т = v8.NewObject("ТаблицаЗначений"); 
	Т.Колонки.Добавить("ПолноеИмя");
	Т.Колонки.Добавить("Имя");
	Т.Колонки.Добавить("Пароль");
	Т.Колонки.Добавить("ВходВПрограммуРазрешен");
	Т.Колонки.Добавить("АутентификацияСтандартная");
	Т.Колонки.Добавить("АутентификацияОС");
	Т.Колонки.Добавить("ПользовательОС");
	Т.Колонки.Добавить("ЗапрещеноИзменятьПароль");
	Т.Колонки.Добавить("ПоказыватьВСпискеВыбора");
	Т.Колонки.Добавить("Профили");
	
				//********** НАЧАЛО: ЗДЕСЬ ОПИСЫВАЕМ ПОЛЬЗОВАТЕЛЕЙ ***************
	
	С = Т.Добавить(); 
	С.ПолноеИмя = "Пользователь 2";
	С.Имя = "Пользователь 2";
	С.Пароль = "";
	С.ВходВПрограммуРазрешен = истина;
	С.АутентификацияСтандартная = ложь;
//	С.АутентификацияОС = ложь;
//	С.ПользовательОС = Неопределено;
	С.АутентификацияОС = истина;
	С.ПользовательОС = "\\SVD\1044";
	С.ЗапрещеноИзменятьПароль = ложь;
	С.ПоказыватьВСпискеВыбора = ложь;
	С.Профили = "-Бухгалтер, -Главный бухгалтер, -Добавление и изменение дат запрета изменения, -Синхронизация данных с другими программами, -Администратор";
	//С.Профили = "Бухгалтер";
	
					
		
	//********** КОНЕЦ ОПИСАНИЯ ПОЛЬЗОВАТЕЛЕЙ ***************
	
	Для Каждого С ИЗ Т Цикл
		
		//Создаем пользователя
		ОбновляемыеСвойства = v8.NewObject("Структура");
		Для Инд = 1 По Т.Колонки.Количество() Цикл
			Колонка = Т.Колонки.Получить(Инд - 1);
			Зн = С.Получить(Инд - 1);
			Если Колонка.Имя = "Профили" Тогда
				Продолжить;
			КонецЕсли;
			Если Зн <> Неопределено Тогда
				ОбновляемыеСвойства.Вставить(Колонка.Имя, Зн);
			КонецЕсли;				
		КонецЦикла;
		ОбновляемыеСвойства.Вставить("Действие", "Записать"); //Не уверен, что без этого будет работать
		ОбновляемыеСвойства.Вставить("ПарольУстановлен", истина); 
		ОбновляемыеСвойства.Вставить("АутентификацияOpenID", ложь); 
		
		
		ПользовательИБСуществует = v8.ПользователиИнформационнойБазы.НайтиПоИмени(С.Имя) <> Неопределено;
		
		v8.Пользователи.УстановитьСвойстваПользователяИБ(С.Имя, ОбновляемыеСвойства, НЕ ПользовательИБСуществует); //Создавать нового ставим всегда в Истина
		
		Сообщить(?(ПользовательИБСуществует, "Добавлен", "Обновлен") + " пользователь ИБ: "  + С.Имя);
		
		ТекПользователь = v8.Справочники.Пользователи.НайтиПоНаименованию(ОбновляемыеСвойства.ПолноеИмя, истина);
		ПользовательСуществует = v8.ЗначениеЗаполнено(ТекПользователь);
		
		//Записываем пользователя в 1С, если его еще нет в базе
		Если НЕ ПользовательСуществует Тогда
			Пользователь = v8.Справочники.Пользователи.СоздатьЭлемент();	
			Пользователь.Наименование = ОбновляемыеСвойства.ПолноеИмя;
			Пользователь.ДополнительныеСвойства.Вставить(
			"ОписаниеПользователяИБ", ОбновляемыеСвойства);
			Пользователь.Записать();	
			ТекПользователь = Пользователь.Ссылка;
			Сообщить("Создан пользователь базы: "  + С.Имя);
		КонецЕсли;
	
		МассивПрофили = СтрРазделить(С.Профили, ",");
		Для Каждого ИмяПрофиля ИЗ МассивПрофили Цикл
			ИмяПрофиля = СокрЛП(ИмяПрофиля);
			Если Лев(ИмяПрофиля, 1) = "-" Тогда
				УдалитьПрофиль = истина;
				ИмяПрофиля = Сред(ИмяПрофиля, 2);
			Иначе
				УдалитьПрофиль = Ложь;
			КонецЕсли;
			
			Если v8.УправлениеДоступомСлужебный.УпрощенныйИнтерфейсНастройкиПравДоступа() Тогда
				ТекПрофиль = v8.Справочники.ПрофилиГруппДоступа.НайтиПоНаименованию(ИмяПрофиля);
				Если Не v8.ЗначениеЗаполнено(ТекПрофиль) Тогда
					Сообщить("Не найден профиль: " + ИмяПрофиля, СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				Если УдалитьПрофиль Тогда
					Сообщить("  Упрощенное удаление профиля: " + УдалитьПрофиль + " у пользователя: " + ТекПользователь);
					v8.УправлениеДоступом.ВыключитьПрофильПользователю(ТекПользователь, ТекПрофиль);
				Иначе
					v8.УправлениеДоступом.ВключитьПрофильПользователю(ТекПользователь, ТекПрофиль);
				КонецЕсли;

			Иначе
				
			
				ТекГруппа = v8.Справочники.ГруппыДоступа.НайтиПоНаименованию(ИмяПрофиля);
				//Сообщить("" +ТипЗнч(ТекГруппа) + " " + ТекГруппа);
				//Прерват
				Если Не v8.ЗначениеЗаполнено(ТекГруппа) Тогда
					Сообщить("Не найдена группа: " + ИмяПрофиля, СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				
				//Код скопирован из типовой формы ПраваДоступа, несколько упрощен
				ГруппаДоступаОбъект = ТекГруппа.ПолучитьОбъект();
				
				Если УдалитьПрофиль Тогда
					Сообщить("  Обычное удаление профиля: " + УдалитьПрофиль + " у пользователя: " + ТекПользователь);
					СтрокаТЧ = ГруппаДоступаОбъект.Пользователи.Найти(ТекПользователь, "Пользователь");
					Если СтрокаТЧ <> Неопределено Тогда
						ГруппаДоступаОбъект.Пользователи.Удалить(СтрокаТЧ);
					КонецЕсли;
				Иначе
					Если ГруппаДоступаОбъект.Пользователи.Найти(ТекПользователь, "Пользователь") = Неопределено Тогда
						ГруппаДоступаОбъект.Пользователи.Добавить().Пользователь = ТекПользователь;
					КонецЕсли;
				КонецЕсли;
				ГруппаДоступаОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//=========== КОНЕЦ КОДА ДОБАВЛЕНИЯ ПОЛЬЗОВАТЕЛЕЙ ==========
	

КонецПроцедуры


// ****************************************************************************
// Служебные процедуры
// ****************************************************************************

Процедура ПриНачалеРаботы()

	errors = Ложь;

	updater = Новый Updater1C;

	// Если в скрипте не планируется использовать
	// подключение к базе - просто закомментируйте
	// две нижние строки.
	connector = updater.CreateConnector();
	v8 = updater.BaseConnectNew(connector);
	
КонецПроцедуры

Процедура ПриОкончанииРаботы()

	Если v8 <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(v8);
			v8 = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если connector <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(connector);
			connector = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если updater <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(updater);
			updater = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;

	Если errors Тогда
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПроцедуры

// ****************************************************************************
// Инициализация и запуск скрипта
// ****************************************************************************

ПриНачалеРаботы();

Попытка	
	Главная();
	updater.КодПользователяВыполнился();
Исключение
	errors = Истина;
	Сообщить("<span class='red'><b>" + ОписаниеОшибки() + "</b></span>");
КонецПопытки;

ПриОкончанииРаботы();