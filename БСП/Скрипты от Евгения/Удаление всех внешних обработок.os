#use "updater1c"

// ****************************************************************************
// Переменные модуля
// ****************************************************************************

Перем errors;           // Признак того, что при выполнении скрипта были ошибки.
Перем updater;          // Обновлятор, через который мы получаем информацию о базе,
                        // а также вызываем различные функции обновлятора.
Перем connector;        // Коннектор для подключения к базе.
Перем v8;               // Само подключение к базе через коннектор.

// ****************************************************************************
// Ваш код для выполнения обновлятором
// ****************************************************************************

Процедура Главная()

    // Проверяем, что переменная v8 инициализирована
    Если v8 = Неопределено Тогда
        Сообщить("<span class='red'><b>Ошибка: переменная v8 не инициализирована</b></span>");
        Возврат;
    КонецЕсли;

    // Запрос для получения всех элементов справочника "ДополнительныеОтчетыИОбработки"
    Запрос = v8.NewObject("Запрос",
        "ВЫБРАТЬ
        |   Т.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.ДополнительныеОтчетыИОбработки КАК Т");

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    // Перебираем все элементы и удаляем их
    Пока Выборка.Следующий() Цикл
        Попытка
            Обработка = Выборка.Ссылка.ПолучитьОбъект();
            Если Обработка = Неопределено Тогда
                Сообщить("<span class='red'><b>Ошибка: не удалось получить объект по ссылке</b></span>");
                Продолжить;
            КонецЕсли;

            Обработка.Удалить();
            Сообщить("Удалена обработка: " + Обработка.Наименование);
        Исключение
            errors = Истина;
            Сообщить("<span class='red'><b>Ошибка при удалении обработки: " + ?(Обработка = Неопределено, "неизвестная обработка", Обработка.Наименование) + "</b></span>");
        КонецПопытки;
    КонецЦикла;

КонецПроцедуры

// ****************************************************************************
// Служебные процедуры
// ****************************************************************************

Процедура ПриНачалеРаботы()

    errors = Ложь;

    updater = Новый Updater1C;

    // Инициализация переменной v8
    Попытка
        connector = updater.CreateConnector();
        v8 = updater.BaseConnectNew(connector);
        Если v8 = Неопределено Тогда
            Сообщить("<span class='red'><b>Ошибка: не удалось подключиться к базе</b></span>");
            errors = Истина;
        КонецЕсли;
    Исключение
        Сообщить("<span class='red'><b>Ошибка при инициализации подключения: " + ОписаниеОшибки() + "</b></span>");
        errors = Истина;
    КонецПопытки;

КонецПроцедуры

Процедура ПриОкончанииРаботы()

    Если v8 <> Неопределено Тогда
        Попытка
            ОсвободитьОбъект(v8);
            v8 = Неопределено;
        Исключение
        КонецПопытки;
    КонецЕсли;

    Если connector <> Неопределено Тогда
        Попытка
            ОсвободитьОбъект(connector);
            connector = Неопределено;
        Исключение
        КонецПопытки;
    КонецЕсли;

    Если updater <> Неопределено Тогда
        Попытка
            ОсвободитьОбъект(updater);
            updater = Неопределено;
        Исключение
        КонецПопытки;
    КонецЕсли;

    Если errors Тогда
        ЗавершитьРаботу(1);
    КонецЕсли;

КонецПроцедуры

// ****************************************************************************
// Инициализация и запуск скрипта
// ****************************************************************************

ПриНачалеРаботы();

Попытка
    Главная();
    updater.КодПользователяВыполнился();
Исключение
    errors = Истина;
    Сообщить("<span class='red'><b>" + ОписаниеОшибки() + "</b></span>");
КонецПопытки;

ПриОкончанииРаботы();
